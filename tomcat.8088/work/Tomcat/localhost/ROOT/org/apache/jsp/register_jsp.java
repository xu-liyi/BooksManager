/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2023-09-06 13:29:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<title>注册账号</title>\n");
      out.write("<meta name=\"description\" content=\"这是一个 index 页面\">\n");
      out.write("<meta name=\"keywords\" content=\"index\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<meta name=\"renderer\" content=\"webkit\">\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n");
      out.write("<meta name=\"apple-mobile-web-app-title\" content=\"Amaze UI\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"static/assets/css/amazeui.min.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"static/assets/css/amazeui.datatables.min.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"static/assets/css/app.css\">\n");
      out.write("<script src=\"http://www.jq22.com/jquery/jquery-1.10.2.js\"></script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body data-type=\"login\">\n");
      out.write("	<script src=\"static/assets/js/theme.js\"></script>\n");
      out.write("	<div class=\"am-g tpl-g\">\n");
      out.write("		<!-- 风格切换 -->\n");
      out.write("		<div class=\"tpl-skiner\">\n");
      out.write("			<div class=\"tpl-skiner-toggle am-icon-cog\"></div>\n");
      out.write("			<div class=\"tpl-skiner-content\">\n");
      out.write("				<div class=\"tpl-skiner-content-title\">选择主题</div>\n");
      out.write("				<div class=\"tpl-skiner-content-bar\">\n");
      out.write("					<span class=\"skiner-color skiner-white\" data-color=\"theme-white\"></span>\n");
      out.write("					<span class=\"skiner-color skiner-black\" data-color=\"theme-black\"></span>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		<div class=\"tpl-login\">\n");
      out.write("			<div class=\"tpl-login-content\">\n");
      out.write("				<div class=\"tpl-login-title\">注册用户</div>\n");
      out.write("				<span class=\"tpl-login-content-info\">创建一个新的用户</span>\n");
      out.write("\n");
      out.write("				<form class=\"am-form tpl-form-line-form\" method=\"post\"\n");
      out.write("					action=\"RegisterServlet\">\n");
      out.write("					<div class=\"am-form-group\">\n");
      out.write("						<input type=\"text\" class=\"tpl-form-input\" id=\"user-name\"\n");
      out.write("							name=\"username\" required=\"required\" placeholder=\"请输入学号\">\n");
      out.write("					</div>\n");
      out.write("					<div class=\"am-form-group\">\n");
      out.write("						<input type=\"password\" class=\"tpl-form-input\" id=\"user-name\"\n");
      out.write("							name=\"password\" required=\"required\" placeholder=\"请输入密码\">\n");
      out.write("					</div>\n");
      out.write("					<div class=\"am-form-group\">\n");
      out.write("						<input type=\"text\" class=\"tpl-form-input\" id=\"user-name\"\n");
      out.write("							name=\"name\" required=\"required\" placeholder=\"请输入姓名\">\n");
      out.write("					</div>\n");
      out.write("					<div class=\"am-form-group\">\n");
      out.write("						<input type=\"text\" class=\"tpl-form-input\" id=\"user-name\"\n");
      out.write("							name=\"email\" required=\"required\" placeholder=\"请输入邮箱\">\n");
      out.write("					</div>\n");
      out.write("					<div class=\"am-form-group\">\n");
      out.write("						<input type=\"text\" class=\"tpl-form-input\" id=\"user-name\"\n");
      out.write("							name=\"phone\" required=\"required\" placeholder=\"请输入手机号\">\n");
      out.write("					</div>\n");
      out.write("\n");
      out.write("					<div class=\"am-form-group\">\n");
      out.write("						<button type=\"submit\"\n");
      out.write("							class=\"am-btn am-btn-primary  am-btn-block tpl-btn-bg-color-success  tpl-login-btn\">注册</button>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"am-form-group\">\n");
      out.write("						<button type=\"button\" onclick=\"location.href='login.jsp';\"\n");
      out.write("							class=\"am-btn am-btn-primary  am-btn-block tpl-btn-bg-color-success  tpl-login-btn\">返回登录</button>\n");
      out.write("					</div>\n");
      out.write("				</form>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	<script src=\"http://cdn.bootcss.com/amazeui/2.7.2/js/amazeui.min.js\"></script>\n");
      out.write("	<script src=\"static/assets/js/app.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
