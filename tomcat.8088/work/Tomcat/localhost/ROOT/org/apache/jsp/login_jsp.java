/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2023-09-03 03:02:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

	String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
		+ request.getContextPath() + "/";

      out.write("\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n");
      out.write("<html lang=\"zh-CN\" class=\"bootstrap-admin-vertical-centered\">\n");
      out.write("<head>\n");
      out.write("<base href=\"");
      out.print(basePath);
      out.write("\" />\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>图书馆管理系统</title>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<link rel=\"stylesheet\" href=\"static/css/bootstrap.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"static/css/bootstrap-theme.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"static/css/bootstrap-admin-theme.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"static/css/bootstrap-admin-theme.css\">\n");
      out.write("<script src=\"static/js/bootstrap.min.js\"></script>\n");
      out.write("<script src=\"static/jQuery/jquery-3.1.1.min.js\"></script>\n");
      out.write("<script src=\"static/js/login.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	function changeValidateCode(obj) {\n");
      out.write("		//每次请求用当前时间作为参数，防止浏览器使用缓存数据\n");
      out.write("		var timeNow = new Date().getTime();\n");
      out.write("		obj.src = \"CodeServlet?time=\" + timeNow;\n");
      out.write("		document.getElementById('code').value = \"\";\n");
      out.write("	}\n");
      out.write("</script>\n");
      out.write("<style>\n");
      out.write("body {\n");
      out.write("	background-image: url(\"02.jpg\");\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write(".alert {\n");
      out.write("	margin: 0 auto 20px;\n");
      out.write("	text-align: center;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<script src=\"static/js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("<body class=\"bootstrap-admin-without-padding\">\n");
      out.write("	<div class=\"container\">\n");
      out.write("		<div class=\"row\">\n");
      out.write("			<div class=\"col-lg-12\">\n");
      out.write("				<div class=\"alert alert-info\">\n");
      out.write("					<a class=\"close\" data-dismiss=\"alert\" href=\"#\">&times;</a>\n");
      out.write("					欢迎登录图书馆管理系统\n");
      out.write("				</div>\n");
      out.write("				<form class=\"bootstrap-admin-login-form\" method=\"post\"\n");
      out.write("					action=\"LoginServlet\">\n");
      out.write("					");

						String state = (String) session.getAttribute("state");
						session.removeAttribute("state");
						if (state != null) {
					
      out.write("\n");
      out.write("					<label class=\"control-label\" for=\"username\">输入有误！请重试</label>\n");
      out.write("\n");
      out.write("					");
}
      out.write("\n");
      out.write("					<div class=\"form-group\">\n");
      out.write("						<label class=\"control-label\" for=\"username\">账&nbsp;号</label> <input\n");
      out.write("							type=\"text\" class=\"form-control\" id=\"username\" name=\"username\"\n");
      out.write("							required=\"required\" placeholder=\"学号/工号\" /> <label\n");
      out.write("							class=\"control-label\" for=\"username\" style=\"display: none;\"></label>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"form-group\">\n");
      out.write("						<label class=\"control-label\" for=\"password\">密&nbsp;码</label> <input\n");
      out.write("							type=\"password\" class=\"form-control\" id=\"password\"\n");
      out.write("							name=\"password\" required=\"required\" placeholder=\"密码\" /> <label\n");
      out.write("							class=\"control-label\" for=\"username\" style=\"display: none;\"></label>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"form-group\">\n");
      out.write("						<label class=\"control-label\" for=\"code\">验&nbsp;证&nbsp;码</label>\n");
      out.write("						<div class=\"row\">\n");
      out.write("							<div class=\"col-md-8\">\n");
      out.write("								<input type=\"text\" class=\"form-control\" id=\"code\" name=\"code\"\n");
      out.write("									required=\"required\" placeholder=\"验证码(点击图片更换)\" />\n");
      out.write("							</div>\n");
      out.write("							<div class=\"col-md-4\">\n");
      out.write("								<img src=\"CodeServlet\" onclick=\"changeValidateCode(this)\"\n");
      out.write("									alt=\"验证码\" />\n");
      out.write("							</div>\n");
      out.write("							<label class=\"control-label\" for=\"username\"\n");
      out.write("								style=\"display: none;\"></label>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("\n");
      out.write("					<label class=\"control-label\" for=\"password\">没有账号请<a\n");
      out.write("						href=\"register.jsp\" style=\"color: blue;\">注册</a></label><br> <input\n");
      out.write("						type=\"submit\" class=\"btn btn-lg btn-primary\"\n");
      out.write("						value=\"登&nbsp;&nbsp;&nbsp;&nbsp;录\" />\n");
      out.write("				</form>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
